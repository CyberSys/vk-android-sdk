/**
 * Copyright (c) 2020 - present, LLC “V Kontakte”
 *
 * 1. Permission is hereby granted to any person obtaining a copy of this Software to
 * use the Software without charge.
 *
 * 2. Restrictions
 * You may not modify, merge, publish, distribute, sublicense, and/or sell copies,
 * create derivative works based upon the Software or any part thereof.
 *
 * 3. Termination
 * This License is effective until terminated. LLC “V Kontakte” may terminate this
 * License at any time without any negative consequences to our rights.
 * You may terminate this License at any time by deleting the Software and all copies
 * thereof. Upon termination of this license for any reason, you shall continue to be
 * bound by the provisions of Section 2 above.
 * Termination will be without prejudice to any rights LLC “V Kontakte” may have as
 * a result of this agreement.
 *
 * 4. Disclaimer of warranty and liability
 * THE SOFTWARE IS MADE AVAILABLE ON THE “AS IS” BASIS. LLC “V KONTAKTE” DISCLAIMS
 * ALL WARRANTIES THAT THE SOFTWARE MAY BE SUITABLE OR UNSUITABLE FOR ANY SPECIFIC
 * PURPOSES OF USE. LLC “V KONTAKTE” CAN NOT GUARANTEE AND DOES NOT PROMISE ANY
 * SPECIFIC RESULTS OF USE OF THE SOFTWARE.
 * UNDER NO CIRCUMSTANCES LLC “V KONTAKTE” BEAR LIABILITY TO THE LICENSEE OR ANY
 * THIRD PARTIES FOR ANY DAMAGE IN CONNECTION WITH USE OF THE SOFTWARE.
*/

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.vk.gradle.publish'
apply from: "../dependencies.gradle"

def isEnabled = ""
try {
    isEnabled = providers.environmentVariable("SDK_UPDATE")
            .forUseAtConfigurationTime()
            .get()
} catch(Exception ignored) {}

if (isEnabled != "1") {
    Project superApp = rootProject.findProject(":sdk:sak")
    if (superApp == null) {
        throw new IllegalStateException("Couldn't find :sdk:sak project.")
    }

    apply plugin: 'com.vk.gradle.sak.publish.core'
}

version = sdkVersions.name
group = 'com.vk'
sdkPublish.POM_ARTIFACT_ID = sdkPublish.POM_ID_ARTIFACT_ID
sdkPublish.POM_NAME = sdkPublish.POM_ID_NAME
sdkPublish.POM_ARTIFACT_DESCRIPTION = sdkPublish.POM_ID_DESCRIPTION
ext.POM_ARTIFACT_ID = sdkPublish.POM_ID_ARTIFACT_ID

android {
    compileSdkVersion "$sdkVersions.compileSdk".toInteger()
    buildToolsVersion "$sdkVersions.buildTools"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdkVersion "$sdkVersions.minSdk"
        targetSdkVersion "$sdkVersions.targetSdk"
        versionCode "$sdkVersions.code".toInteger()
        versionName "$sdkVersions.name"
    }

    packagingOptions {
        exclude("builddef.lst")
        exclude("**/com/**")
        exclude("META-INF/*.version")
        exclude("autoTest/**")
        exclude("META-INF/spring.*")
        exclude("META-INF/notice.txt")
        exclude("META-INF/resources/**")
        exclude("mockito-extensions/org.mockito.plugins.MockMaker")
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}

configurations {
    // Used for correct javadoc generation
    javadocDeps
}

dependencies {
    implementation sdkLibraries.kotlin
    implementation sdkLibraries.gson

    testImplementation testLibraries.junit
}

apply from: "../signing.gradle"
