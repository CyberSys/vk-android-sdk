/*******************************************************************************
 * The MIT License (MIT)
 *
 * Copyright (c) 2019 vk.com
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 ******************************************************************************/
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply from: "../dependencies.gradle"

def isEnabled = ""
try {
    isEnabled = providers.environmentVariable("SDK_UPDATE")
            .forUseAtConfigurationTime()
            .get()
} catch(Exception e) {}

if (isEnabled != "1") {
    Project superApp = rootProject.findProject(":sdk:sak")
    if (superApp == null) {
        throw new IllegalStateException("Couldn't find :sdk:sak project.")
    }

    apply plugin: 'com.vk.gradle.sak.publish.core'
}

version = sdkVersions.name
group = 'com.vk'
ext.POM_ARTIFACT_ID = sdkPublish.POM_ARTIFACT_ID

android {
    compileSdkVersion "$sdkVersions.compileSdk".toInteger()
    buildToolsVersion "$sdkVersions.buildTools"

    defaultConfig {
        minSdkVersion "$sdkVersions.minSdk"
        targetSdkVersion "$sdkVersions.targetSdk"
        versionCode "$sdkVersions.code".toInteger()
        versionName "$sdkVersions.name"
        manifestPlaceholders = [VKSdkVersion: version, VKSdkVersionCode: sdkVersions.code]
    }

    packagingOptions {
        exclude("builddef.lst")
        exclude("**/com/**")
        exclude("META-INF/*.kotlin_module")
        exclude("META-INF/*.version")
        exclude("autoTest/**")
        exclude("META-INF/spring.*")
        exclude("META-INF/notice.txt")
        exclude("META-INF/resources/**")
        exclude("mockito-extensions/org.mockito.plugins.MockMaker")
    }

    lintOptions {
        warningsAsErrors true
    }
}

configurations {
    // Used for correct javadoc generation
    javadocDeps
}

dependencies {
    implementation sdkLibraries.kotlin
    implementation sdkLibraries.okHttp
    implementation sdkLibraries.okHttpLoggingInterceptor
    implementation sdkLibrariesSupport.collection
    implementation sdkLibrariesSupport.activity

    testImplementation testLibraries.junit
    testImplementation testLibraries.mockito

    if (isEnabled == "1") {
        api project(":id")
        api project(":host")
    } else {
        implementation sdkLibraries.vkUid
        implementation project(':api:sdk:host')
    }
}

apply from: "../publish.gradle"